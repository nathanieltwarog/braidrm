lower = c(NA,NA,NA,NA,NA,0,0),
getCIs=FALSE)
coef(bfit)
bfit <- braidrm(measure ~ concA + concB, surface,
model=c(1:5,6,7,8), start=startingParameter,
upper = c(0.75,0.75,NA,NA,NA,NA,0.7,NA,NA),
getCIs=FALSE)
coef(bfit)
bfit <- braidrm(measure ~ concA + concB, surface,
model=c(1:5,6,9), start=startingParameter,
lower = c(NA,NA,3,3,NA,0,0),
getCIs=FALSE)
coef(bfit)
rm(list=ls())
usethis::use_vignette("confidenceIntervals","BRAID Confidence Intervals")
library(braidrm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
set.seed(20240823)
summary(braidrm(measure ~ concA + concB, additiveExample, getCIs=TRUE))
summary(braidrm(measure ~ concA + concB, synergisticExample, getCIs=TRUE))
bfit <- braidrm(measure ~ concA + concB, antagonisticExample, getCIs = FALSE)
summary(bfit)
bfit_ci <- calcBraidBootstrap(bfit)
summary(bfit_ci)
# CI on the predicted effect at dose pair (10, 10)
calcBraidConfInt(bfit_ci, function(p) evalBraidModel(10,10,p))
# CI on the IAE at 50% and 90% efficacy
calcBraidConfInt(bvit_ci,function(p) estimateIAE(p,c(0.5,0.9),10,10))
# CI on the predicted effect at dose pair (10, 10)
calcBraidConfInt(bfit_ci, function(p) evalBraidModel(10,10,p))
# CI on the IAE at 50% and 90% efficacy
calcBraidConfInt(bfit_ci,function(p) estimateIAE(p,c(0.5,0.9),10,10))
# CI on the predicted effect at dose pair (10, 10)
calcBraidConfInt(bfit_ci, function(p) evalBraidModel(10,10,p))
# CI on the IAE at 50% and 90% efficacy
calcBraidConfInt(bfit_ci,function(p) estimateIAE(p,c(0.5,0.9),c(10,10)))
# `bfit` does not have confidence intervals
calcBraidConfInt(bfit_ci, function(p) evalBraidModel(10,10,p))
# `bfit` does not have confidence intervals
calcBraidConfInt(bfit, function(p) evalBraidModel(10,10,p))
# `bfit` does not have confidence intervals
calcBraidConfInt(bfit, function(p) evalBraidModel(10,10,p))
usethis::use_article("estimatingIAE","Estimating the IAE")
library(braidrm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(braidrm)
library(braidReports)
library(tidyverse)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
additivePar <- c(
1, 1, 3, 3,
0, # Additive
0, 1, 1, 1
)
concentrations <- seq(0,3,length=51)
surface <- expand_grid(concA=concentrations, concB=concentrations) %>%
mutate(additive = evalBraidModel(concA,concB,additivePar))
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=additive)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=additive,linetype=after_stat(level)),breaks=c(0.5,0.9))+
# geom_contour(aes(z=additive),breaks=seq(0.1,0.9,by=0.1),
# 			 colour="black",linetype=2)+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
additivePar <- c(
1, 1, 3, 3,
0, # Additive
0, 1, 1, 1
)
concentrations <- seq(0,3,length=51)
surface <- expand_grid(concA=concentrations, concB=concentrations) %>%
mutate(additive = evalBraidModel(concA,concB,additivePar))
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=additive)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=additive,linetype=factor(after_stat(level))),breaks=c(0.5,0.9))+
# geom_contour(aes(z=additive),breaks=seq(0.1,0.9,by=0.1),
# 			 colour="black",linetype=2)+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=additive)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=additive,linetype=factor(after_stat(level))),
breaks=c(0.5,0.9),colour="black")+
scale_linetype_manual(values=c(2,1))+
# geom_contour(aes(z=additive),breaks=seq(0.1,0.9,by=0.1),
# 			 colour="black",linetype=2)+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=additive)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=additive,linetype=factor(after_stat(level))),
breaks=c(0.5,0.9),colour="black")+
scale_linetype_manual(NULL,values=c(2,1),labels=c("50%","90%"))+
# geom_contour(aes(z=additive),breaks=seq(0.1,0.9,by=0.1),
# 			 colour="black",linetype=2)+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=additive)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=additive),breaks=0.9,colour="black")+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=additive)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=additive),breaks=0.9,colour="black")+
geom_path(data=acheive,linetype=2,colour="black")+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
achieve <- data.frame(concA=c(-Inf,2,2),concB=c(2,2,-Inf))
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=additive)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=additive),breaks=0.9,colour="black")+
geom_path(data=achieve,linetype=2,colour="black")+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
estimateIAE(
additivePar,  # A Braid parameter vector
0.9,          # The desired effect level
c(2,2)        # The maximum achievable concentrations of both drugs
)
synergisticPar <- c(
1, 1, 3, 3,
2, # kappa > 0 indicates synergy
0, 1, 1, 1
)
surface <- surface %>%
mutate(synergy = evalBraidModel(concA,concB,synergisticPar))
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=synergy)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=synergy),breaks=0.9,colour="black")+
geom_path(data=achieve,linetype=2,colour="black")+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
estimateIAE(synergisticPar, 0.9, c(2,2))
antagonisticPar <- c(
1, 1, 3, 3,
-1, # kappa < 0 indicates antagonism
0, 1, 1, 1
)
surface <- surface %>%
mutate(antagonism  = evalBraidModel(concA,concB,antagonisticPar))
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=antagonism )) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=antagonism ),breaks=0.9,colour="black")+
geom_path(data=achieve,linetype=2,colour="black")+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
estimateIAE(antagonisticPar, 0.9, c(2,2))
usethis::use_version("patch")
devtools::document()
devtools::document()
devtools::build()
library(braidrm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
bfit <- braidrm(measure ~ concA + concB, antagonisticExample, getCIs = FALSE)
summary(bfit)
bfit_ci <- calcBraidBootstrap(bfit)
summary(bfit_ci)
# CI on the predicted effect at dose pair (10, 10)
calcBraidConfInt(bfit_ci, function(p) evalBraidModel(10,10,p))
# CI on the IAE at 50% and 90% efficacy
calcBraidConfInt(bfit_ci,function(p) estimateIAE(p,c(0.5,0.9),c(10,10)))
devtools::build()
devtools::build()
devtools::build()
library(braidrm)
library(braidReports)
library(tidyverse)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
additivePar <- c(
1, 1, 3, 3,
0, # Additive
0, 1, 1, 1
)
concentrations <- seq(0,3,length=51)
surface <- expand_grid(concA=concentrations, concB=concentrations) %>%
mutate(additive = evalBraidModel(concA,concB,additivePar))
achieve <- data.frame(concA=c(-Inf,2,2),concB=c(2,2,-Inf))
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=additive)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=additive),breaks=0.9,colour="black")+
geom_path(data=achieve,linetype=2,colour="black")+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
estimateIAE(
additivePar,  # A Braid parameter vector
0.9,          # The desired effect level
c(2,2)        # The maximum achievable concentrations of both drugs
)
devtools::build()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(braidrm)
library(braidReports)
library(tidyverse)
additivePar <- c(
1, 1, 3, 3,
0, # Additive
0, 1, 1, 1
)
concentrations <- seq(0,3,length=51)
surface <- expand_grid(concA=concentrations, concB=concentrations) %>%
mutate(additive = evalBraidModel(concA,concB,additivePar))
achieve <- data.frame(concA=c(-Inf,2,2),concB=c(2,2,-Inf))
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=additive)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=additive),breaks=0.9,colour="black")+
geom_path(data=achieve,linetype=2,colour="black")+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
estimateIAE(
additivePar,  # A Braid parameter vector
0.9,          # The desired effect level
c(2,2)        # The maximum achievable concentrations of both drugs
)
devtools::install()
library(braidrm)
library(braidReports)
library(tidyverse)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
additivePar <- c(
1, 1, 3, 3,
0, # Additive
0, 1, 1, 1
)
concentrations <- seq(0,3,length=51)
surface <- expand_grid(concA=concentrations, concB=concentrations) %>%
mutate(additive = evalBraidModel(concA,concB,additivePar))
achieve <- data.frame(concA=c(-Inf,2,2),concB=c(2,2,-Inf))
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=additive)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=additive),breaks=0.9,colour="black")+
geom_path(data=achieve,linetype=2,colour="black")+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
estimateIAE(
additivePar,  # A Braid parameter vector
0.9,          # The desired effect level
c(2,2)        # The maximum achievable concentrations of both drugs
)
synergisticPar <- c(
1, 1, 3, 3,
2, # kappa > 0 indicates synergy
0, 1, 1, 1
)
surface <- surface %>%
mutate(synergy = evalBraidModel(concA,concB,synergisticPar))
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=synergy)) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=synergy),breaks=0.9,colour="black")+
geom_path(data=achieve,linetype=2,colour="black")+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
estimateIAE(synergisticPar, 0.9, c(2,2))
antagonisticPar <- c(
1, 1, 3, 3,
-1, # kappa < 0 indicates antagonism
0, 1, 1, 1
)
surface <- surface %>%
mutate(antagonism  = evalBraidModel(concA,concB,antagonisticPar))
ggplot(surface,aes(x=concA,y=concB)) +
geom_raster(aes(fill=antagonism )) +
scale_fill_distiller(palette="RdYlBu",direction=-1) +
geom_contour(aes(z=antagonism ),breaks=0.9,colour="black")+
geom_path(data=achieve,linetype=2,colour="black")+
labs(x="Concentration A",
y="Concentration B",
fill="Effect",
title="Additive Surface")+
coord_equal()
estimateIAE(antagonisticPar, 0.9, c(2,2))
rm(list=ls())
usethis::use_vignette("alternateMethods","Additional Approaches")
library(braidrm)
ufit <- fitUrsaModel(cbind(additiveExample$concA,additiveExample$concB),additiveExample$measure)
devtools::document()
devtools::document()
devtools::build()
devtools::install()
library(braidrm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
ufit <- fitUrsaModel(measure ~ concA+concB, additiveExample)
devtools::build()
devtools::install()
library(braidrm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
ufit <- fitUrsaModel(measure ~ concA+concB, additiveExample)
coef(ufit)
ufit1 <- fitUrsaModel(measure ~ concA+concB, additiveExample)
coef(ufit1)
ufit2 <- fitUrsaModel(measure ~ concA+concB, synergisticExample)
coef(ufit2)
ufit3 <- fitUrsaModel(measure ~ concA+concB, antagonisticExample)
coef(ufit3)
mfit1 <- fitMusycModel(measure ~ concA+concB, additiveExample)
devtools::documnt()
devtools::document()
devtools::build()
library(braidrm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
mfit1 <- fitMusycModel(measure ~ concA+concB, additiveExample)
coef(mfit1)
mfit2 <- fitMusycModel(measure ~ concA+concB, synergisticExample)
coef(mfit2)
mfit3 <- fitMusycModel(measure ~ concA+concB, antagonisticExample)
coef(mfit3)
concs1 <- cbind(additiveExample$concA,additiveExample$concB)
act1 <- additiveExample$measure
mean(deviationSurface(concs1,act,method="Bliss"))
concs1 <- cbind(additiveExample$concA,additiveExample$concB)
act1 <- additiveExample$measure
mean(deviationSurface(concs1,act1,method="Bliss"))
concs1 <- cbind(additiveExample$concA,additiveExample$concB)
act1 <- additiveExample$measure
mean(deviationSurface(concs1,act1,method="Bliss",range=c(0,1)))
concs1 <- cbind(additiveExample$concA,additiveExample$concB)
act1 <- additiveExample$measure
mean(deviationSurface(concs1,act1,method="Bliss",range=c(0,1)))
mean(deviationSurface(concs1,act1,method="HSA",increasing=TRUE))
mean(deviationSurface(concs1,act1,method="Loewe"))
devtools::document()
devtools::build()
devtools::install()
library(braidrm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
concs1 <- cbind(additiveExample$concA,additiveExample$concB)
act1 <- additiveExample$measure
mean(deviationSurface(concs1,act1,method="Bliss",range=c(0,1)))
mean(deviationSurface(concs1,act1,method="HSA",increasing=TRUE))
mean(deviationSurface(concs1,act1,method="Loewe"))
mean(deviationSurface(concs1,act1,method="ZIP",range=c(0,1)))
concs1 <- cbind(additiveExample$concA,additiveExample$concB)
act1 <- additiveExample$measure
cat("Additivity\n")
mean(deviationSurface(concs1,act1,method="Bliss",range=c(0,1)))
mean(deviationSurface(concs1,act1,method="HSA",increasing=TRUE))
mean(deviationSurface(concs1,act1,method="Loewe"))
mean(deviationSurface(concs1,act1,method="ZIP",range=c(0,1)))
cat("\nSynergy\n")
concs2 <- cbind(synergisticExample$concA,additiveExample$concB)
act2 <- synergisticExample$measure
mean(deviationSurface(concs2,act2,method="Bliss",range=c(0,1)))
mean(deviationSurface(concs2,act2,method="HSA",increasing=TRUE))
mean(deviationSurface(concs2,act2,method="Loewe"))
mean(deviationSurface(concs2,act2,method="ZIP",range=c(0,1)))
cat("\nAntagonism\n")
concs3 <- cbind(antagonisticExample$concA,additiveExample$concB)
act3 <- antagonisticExample$measure
mean(deviationSurface(concs3,act3,method="Bliss",range=c(0,1)))
mean(deviationSurface(concs3,act3,method="HSA",increasing=TRUE))
mean(deviationSurface(concs3,act3,method="Loewe"))
mean(deviationSurface(concs3,act3,method="ZIP",range=c(0,1)))
library(braidrm)
estimateCombinationIndices(concs1,acts1,level=c(0.5,0.9))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
concs1 <- cbind(additiveExample$concA,additiveExample$concB)
act1 <- additiveExample$measure
cat("Additivity\n")
mean(deviationSurface(concs1,act1,method="Bliss",range=c(0,1)))
mean(deviationSurface(concs1,act1,method="HSA",increasing=TRUE))
mean(deviationSurface(concs1,act1,method="Loewe"))
mean(deviationSurface(concs1,act1,method="ZIP",range=c(0,1)))
cat("\nSynergy\n")
concs2 <- cbind(synergisticExample$concA,additiveExample$concB)
act2 <- synergisticExample$measure
mean(deviationSurface(concs2,act2,method="Bliss",range=c(0,1)))
mean(deviationSurface(concs2,act2,method="HSA",increasing=TRUE))
mean(deviationSurface(concs2,act2,method="Loewe"))
mean(deviationSurface(concs2,act2,method="ZIP",range=c(0,1)))
cat("\nAntagonism\n")
concs3 <- cbind(antagonisticExample$concA,additiveExample$concB)
act3 <- antagonisticExample$measure
mean(deviationSurface(concs3,act3,method="Bliss",range=c(0,1)))
mean(deviationSurface(concs3,act3,method="HSA",increasing=TRUE))
mean(deviationSurface(concs3,act3,method="Loewe"))
mean(deviationSurface(concs3,act3,method="ZIP",range=c(0,1)))
estimateCombinationIndices(concs1,acts1,level=c(0.5,0.9))
estimateCombinationIndices(concs1,act1,level=c(0.5,0.9))
estimateCombinationIndices(concs2,act2,level=c(0.5,0.9))
estimateCombinationIndices(concs3,act3,level=c(0.5,0.9))
estimateCombinationIndices(concs1,act1,level=c(0.5))
estimateCombinationIndices(concs2,act2,level=c(0.5))
estimateCombinationIndices(concs3,act3,level=c(0.5))
estimateCombinationIndices(concs1,act1,level=c(0.5))
estimateCombinationIndices(concs2,act2,level=c(0.5))
estimateCombinationIndices(concs3,act3,level=c(0.5))
pkgdown::build_site()
pkgdown::build_site()
.Last.error
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
usethis::use_citation()
?bibentry
devtools::document()
devtools::document()
pkgdown::build_site()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
devtools::install()
pkgdown::build_site()
devtools::check()
?print
library(basicdrm)
.Library
devtools::check()
usethis::use_package("stats")
usethis::use_package("basicdrm")
?usethis::use_package
usethis::use_package("braidReports","Suggests","1.0.0")
devtools::document()
devtools::check()
devtools::check()
devtools::check_built()
devtools::check(vignettes = FALSE)
devtools::check(vignettes = FALSE)
devtools::run_examples()
devtools::check(vignettes = FALSE)
